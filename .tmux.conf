# set parameters:
# -s: server option
# -w: window option
#   : session option
# -g: global session/window option
# -a: append to string
# -u: inherit from global options

# Make the prefix match screen
unbind C-b # Default prefix
set -g prefix C-a
bind C-a send-prefix

set-option -g status-position top

# Custom bindings
bind r source-file ~/.tmux.conf# ; display "Reloaded!"

# Wait a second for delay between repeating commands
set -g repeat-time 1000
set -s escape-time 0

# Start indexing at 1 for keyboard sanity
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Vim binding for splitting
unbind % # Default for split-window -h
unbind s # Default for interactive session selection
unbind '"' # Default for split-window -v
bind v split-window -h
bind s split-window -v

# Who doesn't love pipes and dashes?
bind | split-window -h
bind - split-window -v
bind Enter split-window -h

# Vim key bindings
setw -g mode-keys vi
set -g status-keys vi
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

# # pane movement
# bind-key J command-prompt -p "join pane from:"  "join-pane -s '%%'"
# bind-key S command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Vim-like pane & window selection/resizing
unbind l
unbind Up
unbind Down
unbind Left
unbind Right
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

unbind M-Up
unbind M-Down
unbind M-Left
unbind M-Right
bind -r + resize-pane -U 5
bind -r - resize-pane -D 5
bind -r < resize-pane -L 5
bind -r > resize-pane -R 5
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Update this for macos
# # Use the system clipboard
# bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
# bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# Pane selection
bind 1 select-window -t 1
bind 2 select-window -t 2
bind 3 select-window -t 3
bind 4 select-window -t 4
bind 5 select-window -t 5
bind 6 select-window -t 6
bind 7 select-window -t 7
bind 8 select-window -t 8
bind 9 select-window -t 9
bind 0 select-window -t 10

# Mice settings, or as I like to say 'noob mode'
set -g mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
# set -g mouse-select-window on

# # Colors!
# set -g status-fg white
# set -g status-bg black
# setw -g window-status-fg cyan
# setw -g window-status-bg default
# setw -g window-status-attr dim
# 
# setw -g window-status-current-fg colour28
# setw -g window-status-current-bg default
# setw -g window-status-current-attr bright
# 
# set -g pane-border-fg black
# set -g pane-border-bg default
# set -g pane-active-border-fg green
# set -g pane-active-border-bg default
# 
# set -g message-fg white
# set -g message-bg black
# set -g message-attr bright
# 
# set -g status-right '#[fg=colour245] %R | %d %b #[fg=colour254,bg=colour234,nobold]#[fg=colour16,bg=colour254,bold] #H '
# set -g status-left ''

# Activity
setw -g monitor-activity on
set -g visual-activity off

# Boring stuff
set -g status-interval 15
set -g default-terminal "screen-256color"
setw -g aggressive-resize on
# set -g automatic-rename
# enable wm window titles
#set -g set-titles on
# wm windows titles string
set -g set-titles-string '[#(whoami)@#h:#S:#I] #W'

setw -g window-status-format "#I: #T #F"
setw -g window-status-current-format "#I: #T#F"
# bind \ confirm-before "kill-server"

# set -g default-shell /usr/local/bin/fish
# set -g default-command "reattach-to-user-namespace -l $SHELL -l"
set -g history-limit 10000

# Add a key for opening new windows to remote hosts.
bind-key S command-prompt -p "SSH to Host:" "if-shell '[ -n \"%%\" ]' 'new-window -n \"%1\" \"/usr/bin/ssh %1\"'"
bind-key A command-prompt -p "AutoSSH to Host:" "if-shell '[ -n \"%%\"' 'new-window -n \"%1\" \"/usr/local/bin/autossh %1\"'"
# open a man page on new window
bind '?' command-prompt -p 'man?' "split-window 'exec man %%'"

# quick view of processes
bind '~' split-window "exec htop"

# bind Tab to last window
bind -r Tab last-pane

# set clipboard
set -g set-clipboard on

set -g status-left-length 52
set -g status-right-length 451


set -g status-fg white
set -g status-bg colour234

set -g window-status-activity-style bold
set -g pane-border-style fg=colour245
set -g pane-active-border-style fg=colour39
set -g message-style bold,bg=colour221,fg=colour16

# tmux_conf_theme_left_separator_main='\uE0B0'
# tmux_conf_theme_left_separator_sub='\uE0B1'
# tmux_conf_theme_right_separator_main='\uE0B2'
# tmux_conf_theme_right_separator_sub='\uE0B3'
# 
# set -g status-left '\
# #[fg=colour235,bg=colour252,bold] ❐ #S \
# #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) \
# #[fg=colour238,bg=colour234,nobold]⮀\
# '
# 
# set -g window-status-format '\
# #[fg=white,bg=colour234] #I #W \
# '
# 
# set -g window-status-current-format '\
# #[fg=colour234,bg=colour39]⮀\
# #[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W \
# #[fg=colour39,bg=colour234,nobold]⮀\
# '
# 
# set -g status-right '\
# #{prefix_highlight}\
# #[fg=colour39,bold][#{cpu_fg_color}#{cpu_icon}#[fg=colour39]]#[nobold] \
# #[fg=colour245]%a %R %D \
# #[fg=colour245,bg=colour235,nobold]#(whoami)\
# #[fg=colour39,bold]@\
# #[fg=colour245,nobold]#H\
# '

# set -g status-right '\
# #{prefix_highlight}\
# #[fg=green,bold]↓#[nobold]#{download_speed}#[fg=white] \
# #[fg=colour221,bold]↑#[nobold]#{upload_speed}#[fg=white] \
# #[bold]#{online_status}#[nobold] \
# #[fg=colour39,bold][#{cpu_fg_color}#{cpu_icon}#[fg=colour39]]#[nobold] \
# #[fg=colour245]%a %R %D \
# #[fg=colour234,bg=colour245,nobold]#[fg=colour16,bg=colour254,bold]\
# #[fg=colour245,bg=colour234,bold]#{battery_graph}\
# #[fg=colour234,bg=colour245,bold] #{battery_icon}\
# #[fg=colour234,bg=colour245,bold]#H'

# if-shell 'test "$(uname)" = "Darwin"' 'source-file ~/.tmux-osx.conf'

set -g focus-events on
setw -g aggressive-resize on

# tmux-resurrect
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes '~VimR -> vimr'

# tmux-better-mouse-mode
set -g @scroll-without-changing-pane "on"
set -g @scroll-in-moused-over-pane "off"
set -g @scroll-speed-num-lines-per-scroll "1"
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"

# set -g @continuum-restore 'on'
# set -g @continuum-boot 'on'

set -g @cpu_low_icon "-"
set -g @cpu_medium_icon "="
set -g @cpu_high_icon "≣"

set -g @sidebar-tree-command 'tree -C'
set -g @sidebar-tree-position 'left'
set -g @sidebar-tree 'C-Tab'
set -g @sidebar-tree-focus 'C-S-Tab'
set -g @sidebar-tree-pager 'less -R'
set -g @sidebar-tree-width '30'

set -g @prefix_highlight_fg 'colour39'
set -g @prefix_highlight_bg 'colour234'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=colour39'
set -g @prefix_highlight_output_prefix ''
set -g @prefix_highlight_output_suffix ''

# List of plugins
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'


set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'

set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-net-speed'
set -g @plugin 'tmux-plugins/tmux-sidebar'

# set -g @plugin 'christoomey/vim-tmux-navigator'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
